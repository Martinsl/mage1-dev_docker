version: '3'
services:
  # PHP Service
  fpm:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - "HUID=${UID:-1000}"
        - "HGID=${GID:-1000}"
    depends_on:
      - redis
    container_name: fpm
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - code:/var/www
      - ./conf/php/local.ini:/usr/local/etc/php/conf.d/zz-local.ini
      - ./conf/php/www.ini:/usr/local/etc/php-fpm.d/zz-www.conf
    networks:
      - magento-network

  # NGINX Service
  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
      args:
        - "HUID=${UID}"
        - "HGID=${GID}"
    depends_on:
      - fpm
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "${NGINX_PORT:-80}:80"
    environment:
      NGINX_PORT: "${NGINX_PORT:-80}"
      NGINX_HOST: "${NGINX_HOST:-localhost}"
    command: /bin/sh -c "envsubst '$$NGINX_HOST $$NGINX_PORT'< /etc/nginx/conf.d/mage > /etc/nginx/conf.d/default.conf && exec nginx-debug -g 'daemon off;'"
    volumes:
      - code:/var/www
      - ./conf/nginx/mage:/etc/nginx/conf.d/mage
    networks:
      - magento-network

  # MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "${MYSQL_PORT-3307}:3307"
    environment:
      MYSQL_DATABASE: magento
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - magento-network

  # Redis Service
  redis:
    image: redis:5.0.3-alpine
    container_name: redis
    restart: unless-stopped
    tty: true
    networks:
      - magento-network

networks:
  magento-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  code:
    driver: local
    driver_opts:
      type: none
      device: $PWD
      o: bind
